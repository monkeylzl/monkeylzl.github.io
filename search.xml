<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android</title>
    <url>/2017/03/08/Android/</url>
    <content><![CDATA[<p>Android环境的搭建主要有三个部分：JDK，IDE，SDK</p>
<span id="more"></span>
<h4 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h4><p>由于Android的主题部分采用的是Java语言，所以首先进行Java环境的配置</p>
<ol>
<li>下载JDK，官网下载地址<a href="">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a>，选择相应的JDK。<br><img src="https://raw.githubusercontent.com/monkeylzl/MarkdownPhotos/master/AndroidEnvironmentBuilding/JDK.png"><br>安装过程中可以自定义路径，这里以”D:\Java\jdk1.8.0_101”和”D:\Java\jre1.8.0_101”为例，注意安装路径中不要出现中文或者是空格，等待安装完。<br>JDK=Java Development Kit，Java开发工具集，主要包括JRE和编译器组件。是进行Java开发的必要环境。所以安装JDK就包括JRE的安装。JDK是JRE的完全超集。<br>JRE=Java Runtime Environment，Java运行时环境，主要提供运行Java Class的环境。JDK中本身包含JRE。如果只想运行Java程序，而不需要进行编译（非开发环境，生产环境），可以安装JRE，不用安装JDK。<br>JVM=Java Virtue Machine，Java虚拟机。Java是一种半编译半解释程序，.java源程序经过编译后生成字节码文件.class文件。JVM虚拟机就是一个虚拟的计算机专门用来运行Java程序的虚拟计算机。JVM虚拟机会在安装JRE的时候自动安装</li>
<li>配置环境变量<br>我的电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量,配置JAVA_HOME，PATH，CLASSPATH。  </li>
</ol>
<p><strong>用户变量</strong>  </p>
<ul>
<li><p>变量名：JAVA_HOME，<br>变量值：D:\Java\jdk1.8.0_101（填写自己的安装路径）  </p>
</li>
<li><p>变量名：Path<br>变量值：D:\Java\jdk1.8.0_101\bin<br>注意：原来Path变量中有的变量值不要覆盖，直接将D:\MyEclipse\Java\jdk1.8.0_101\bin放在最前面，最后加分号进行隔离  </p>
</li>
</ul>
<p> <strong>系统变量</strong>  </p>
<ul>
<li>变量名：CLASSPATH<br>变量值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;<br>注意：最前面的点不要忘记，JAVA_HOME是java安装目录,但要加上2个%比如%JAVA_HOME%系统才能识别<br><img src="https://raw.githubusercontent.com/monkeylzl/MarkdownPhotos/master/AndroidEnvironmentBuilding/variable.png"> </li>
</ul>
<ol start="3">
<li>配置成功之后，运行cmd（win+R），测试java和javac命令，出现如图所示表示配置成功。<br><img src="https://raw.githubusercontent.com/monkeylzl/MarkdownPhotos/master/AndroidEnvironmentBuilding/cmdjava.png"><br><img src="https://raw.githubusercontent.com/monkeylzl/MarkdownPhotos/master/AndroidEnvironmentBuilding/cmdjavac.png"></li>
</ol>
<ul>
<li>可以运行java -version命令查看自己的JDK版本,确定java version版本与文件夹D:\Java\jdk1.8.0_101一致，位数与自己电脑的一致。<br><img src="https://raw.githubusercontent.com/monkeylzl/MarkdownPhotos/master/AndroidEnvironmentBuilding/JavaVersion.png"><h4 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h4></li>
</ul>
<p><strong>Android Studio的安装</strong></p>
<ul>
<li>下载<a href="https://developer.android.com/studio/index.html">Android Developer官网</a></li>
<li>安装时按照提示即可，安装过程中会提示SDK的安装路径，<strong>注意一定不要包含空格等特殊字符</strong></li>
<li>第一次打开会出现如下情况<br><img src="https://raw.githubusercontent.com/monkeylzl/MarkdownPhotos/master/AndroidEnvironmentBuilding/problem.png"><br>为了避免，可以在第一次运行AS时要在D:\Android\Android Studio\bin\idea.properties中添加<br>disable.android.first.run=true即可</li>
</ul>
<h4 id="SDK"><a href="#SDK" class="headerlink" title="SDK"></a>SDK</h4><ul>
<li>在安装Android Studio时刻会安装SDK，但是需要更多的Android版本时，需要打开SDK Manager下载，此时需要进行翻墙，可以进行如下设置，选择Tools-&gt;options,进行下图的设置，一定要勾选Force…<br><img src="https://raw.githubusercontent.com/monkeylzl/MarkdownPhotos/master/AndroidEnvironmentBuilding/Internet.png"><br>设置完之后，选择Packages-&gt;Reload，即可下载更新<br><img src="https://raw.githubusercontent.com/monkeylzl/MarkdownPhotos/master/AndroidEnvironmentBuilding/Reload.png"></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Github + Hexo 搭建博客</title>
    <url>/2021/10/04/Github%20+%20Hexo%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>最近突然想起自己之前还用 Github + Hexo 搭建过自己的博客，找到源码一看还是 2017 当时准备面试的时候写的几篇文章。​一转眼已经过去了四年，最近恰好有想要做的，也有想要分享的，那就重拾一下这个博客，趁着国庆放假，收拾收拾。背起行囊，继续出发。</p>
<span id="more"></span>

<p>种一棵树最好的时间是十年前，其次是现在。那就先简单记录一下自己 Github + Hexo 搭建属于自己的博客的过程吧！</p>
<p>在写之前还是先介绍一下两个主角：GitHub 和 Hexo</p>
<h1 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a><a href="https://github.com/">GitHub</a></h1><p>GitHub 是通过 Git 进行版本控制的软件源代码托管服务平台，已经成为了世界上最大的代码存放网站和开源社区。里面其实有很多有意思的东西。这次主要用到的是GitHub Pages，GitHub Pages 是 GitHub 提供的一个网页托管服务，可以用于存放静态网页，包括博客、项目文档甚至整本书。一般GitHub Pages 的网站使用 github.io 的子域名，但是用户也可以使用第三方域名。</p>
<h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a><a href="https://hexo.io/zh-cn/">Hexo</a></h1><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<p>接下来进入主题，搭建的主要步骤</p>
<h1 id="步骤-Mac"><a href="#步骤-Mac" class="headerlink" title="步骤(Mac)"></a>步骤(Mac)</h1><h2 id="安装-HomeBrew"><a href="#安装-HomeBrew" class="headerlink" title="安装 HomeBrew"></a>安装 <a href="https://brew.sh/">HomeBrew</a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span><br></pre></td></tr></table></figure>
<p>该步骤并不必须的，但是在Mac上安装了HomeBrew，安装一些package将会非常方便。</p>
<h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a><a href="https://git-scm.com/downloads">安装Git</a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure>
<p>查看是否安装成功，正常会显示当前安装的git版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>
<h2 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a><a href="https://github.com/">GitHub</a>创建个人仓库</h2><ul>
<li>注册自己的Github账户</li>
<li>创建自己的repo，命名规则为「用户名.github.io」</li>
<li>设置user.name和user.email配置信息<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure></li>
<li>生成ssh密钥文件，一直回车即可，不需要设置密码，然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure></li>
<li>打开Github，选择账户中的settings中的<a href="https://github.com/settings/keys">SSH and GPG keys</a> 页面，点击New SSH key ，将刚刚生成的key内容复制进去，标题可以任意取</li>
<li>检测是否已经配置成功，正常会显示「Hi monkeylzl! You’ve successfully authenticated, but GitHub does not provide shell access.<br>Connection to github.com closed.」<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh git@github.com </span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a><a href="http://nodejs.cn/learn/how-to-install-nodejs">安装Node.js</a></h2><p>安装Node.js会包含环境变量及npm的安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>
<p>检测是否安装成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line"></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a><a href="https://hexo.io/zh-cn/">安装Hexo</a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h2 id="建站发布文章"><a href="#建站发布文章" class="headerlink" title="建站发布文章"></a>建站发布文章</h2><ul>
<li>初始化，同时在该目录下创建了「blog」文件夹<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure></li>
<li>进入到「blog」文件夹进行操作，可以进行预览，默认有一个「Hello World」的文档<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li>
<li>修改根目录下的_config.yml文件，搜索「deploy」关联上面创建的git repo<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:monkeylzl/monkeylzl.github.io.git #添加自己的repo git 地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li>
<li>保存站点配置文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>
<li>创建文章并发布，发布完之后，打开 <a href="https://monkeylzl.github.io/">https://monkeylzl.github.io/</a> 自己的博客查看，注意发布可能需要一些时间，如果没有显示内容可以稍微等一会然后刷新下<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo new &quot;Test&quot;</span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li>
<li>常用hexo命令<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章</span><br><span class="line">hexo g == hexo generate #生成</span><br><span class="line">hexo s == hexo server #启动服务预览</span><br><span class="line">hexo d == hexo deploy #部署</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h1><p>这篇文章初步讲解了搭建过程，后续会介绍 Hexo 的主题配置，打造自己喜欢的博客风格。</p>
<h1 id="博客效果"><a href="#博客效果" class="headerlink" title="博客效果"></a>博客效果</h1><p>可以复制链接然后打开 <a href="https://monkeylzl.github.io/">https://monkeylzl.github.io/</a></p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] GitHub 维基百科：<a href="https://zh.wikipedia.org/wiki/GitHub">https://zh.wikipedia.org/wiki/GitHub</a></p>
<p>[2] Hexo 官网：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p>
<p>[3] HomeBrew 官网：<a href="https://brew.sh/">https://brew.sh/</a></p>
<p>[4] Git 安装官网：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p>
<p>[5] GitHub 官网：<a href="https://github.com/">https://github.com/</a></p>
<p>[6] Node.js 安装官网：<a href="http://nodejs.cn/learn/how-to-install-nodejs">http://nodejs.cn/learn/how-to-install-nodejs</a> </p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 中 Next 主题（持续更新...）</title>
    <url>/2021/10/05/Hexo%E4%B8%AD%20Next%20%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>Hexo中有很多主题，可以在官网 <a href="https://hexo.io/themes/">Hexo主题</a>中查找选择自己喜欢的主题，我最终选择的是 Next，主要是因为简洁且网上的教程也比较多，这里记录下我博客的 Next 主题配置，效果详见<a href="https://monkeylzl.github.io/">博客</a></p>
<span id="more"></span>

<h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><p>Hexo 中默认的主题是 landscape，现在更换为 Next</p>
<h2 id="Next-官方文档："><a href="#Next-官方文档：" class="headerlink" title="Next 官方文档："></a>Next 官方文档：</h2><p><a href="https://theme-next.iissnan.com/getting-started.html">Next 0.1.0-5.4.1版本</a><br><a href="https://theme-next.js.org/">NexT 6.0.0-8.8.0版本</a></p>
<h2 id="Next主题-github-tags-note："><a href="#Next主题-github-tags-note：" class="headerlink" title="Next主题 github tags note："></a>Next主题 github tags note：</h2><p><a href="https://github.com/iissnan/hexo-theme-next/tags">0.1.0-5.4.1版本</a><br><a href="https://github.com/theme-next/hexo-theme-next/tags">6.0.0-7.8.0版本</a><br><a href="https://github.com/next-theme/hexo-theme-next/tags">8.0.0-8.8.0版本</a></p>
<h2 id="配置-Hexo-主题"><a href="#配置-Hexo-主题" class="headerlink" title="配置 Hexo 主题"></a>配置 Hexo 主题</h2><ul>
<li>根据上面的版本，下载一个即可，我目前使用的是7.8.0版本</li>
<li>将下载好的主题添加到你的博客根目录下 themes 文件夹中，其中可以看到有默认的主题 landscape</li>
<li>修改博客根目录下_config.yml文件中的theme<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">## theme: landscape</span><br><span class="line">theme: next-7.8.0</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="配置-Next-主题"><a href="#配置-Next-主题" class="headerlink" title="配置 Next 主题"></a>配置 Next 主题</h1><h2 id="修改个人信息"><a href="#修改个人信息" class="headerlink" title="修改个人信息"></a>修改个人信息</h2><p>修改博客根目录下_config.yml文件中的 site 相关信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Monkeylzl&#x27;s World</span><br><span class="line">subtitle: &#x27;&#x27;</span><br><span class="line">description: 经历一个过程然后成为更好的自己</span><br><span class="line">keywords:</span><br><span class="line">author: monkeylzl</span><br><span class="line">#language: en</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure>

<h2 id="修改-next-的主题风格"><a href="#修改-next-的主题风格" class="headerlink" title="修改 next 的主题风格"></a>修改 next 的主题风格</h2><p>next 一共提供了四种主题风格，可以分别切换，通过<code>hexo s</code>预览一下效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>

<h2 id="修改菜单栏"><a href="#修改菜单栏" class="headerlink" title="修改菜单栏"></a>修改菜单栏</h2><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>修改 next 主题文件夹下的_config.yml文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Usage: `Key: /link/ || icon`</span><br><span class="line"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.</span><br><span class="line"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span><br><span class="line"># When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).</span><br><span class="line"># External url should start with http:// or https://</span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br><span class="line"></span><br><span class="line"># Enable / Disable menu icons / item badges.</span><br><span class="line">menu_settings:</span><br><span class="line">  icons: true # 是否显示各个页面的图标</span><br><span class="line">  badges: true # 是否显示分类/标签/归档页的内容量</span><br></pre></td></tr></table></figure>
<h3 id="解决Next主题-Cannot-GET-tags-问题"><a href="#解决Next主题-Cannot-GET-tags-问题" class="headerlink" title="解决Next主题 Cannot GET /tags/ 问题"></a>解决Next主题 Cannot GET /tags/ 问题</h3><ul>
<li>增加了新的 menu，但是点击之后显示Cannot GET /tags/<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure></li>
<li>执行命令后，在根目录下的source下会出现tags文件下，修改 tag 文件夹下的index.md，增加type: “tags”</li>
<li>如果你的博客已经增加了评论系统，由于评论系统默认是打开的，所以这里要屏蔽下，所以增加 comments: false</li>
<li>示例<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">date: 2021-10-04 17:31:26</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="如何自定义Menu"><a href="#如何自定义Menu" class="headerlink" title="如何自定义Menu"></a>如何自定义Menu</h3><ul>
<li>待研究</li>
</ul>
<h2 id="增加本地搜索功能"><a href="#增加本地搜索功能" class="headerlink" title="增加本地搜索功能"></a>增加本地搜索功能</h2><ul>
<li><p>安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li>
<li><p>修改博客根目录下_config.yml文件，增加 search</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Search</span><br><span class="line">search:</span><br><span class="line">path: search.xml # 支持json和xml，可自行设定，索引文件的路径，相对于站点根目录</span><br><span class="line">field: post # 搜索范围，默认是 post，还可以选择 page、all，设置成 all 表示搜索所有页面</span><br><span class="line">format: html</span><br><span class="line">limit: 10000 # 限制搜索的条目数</span><br></pre></td></tr></table></figure></li>
<li><p>修改 next 主题文件夹下的_config.yml文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Local Search</span><br><span class="line"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # If auto, trigger search by changing input.</span><br><span class="line">  # If manual, trigger search by pressing enter key or search button.</span><br><span class="line">  trigger: auto</span><br><span class="line">  # Show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  # Unescape html strings to the readable one.</span><br><span class="line">  unescape: false</span><br><span class="line">  # Preload the search data when the page loads.</span><br><span class="line">  preload: false</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="增加阅读全文功能"><a href="#增加阅读全文功能" class="headerlink" title="增加阅读全文功能"></a>增加阅读全文功能</h2><ul>
<li>修改 next 主题文件夹下的_config.yml文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Automatically excerpt description in homepage as preamble text.</span><br><span class="line">excerpt_description: true</span><br><span class="line"></span><br><span class="line"># Read more button</span><br><span class="line"># If true, the read more button will be displayed in excerpt section.</span><br><span class="line">read_more_btn: true</span><br></pre></td></tr></table></figure></li>
<li>配置完后，由于next 7.6 版本以后删除自动摘要功能，需要我们手动设置，方法主要有<ul>
<li>为每个博客写好 description<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo 中 Next 主题（持续更新...）</span><br><span class="line">date: 2021-10-04 20:52:01</span><br><span class="line">tags: 博客搭建</span><br><span class="line">categories: 技术</span><br><span class="line">description: xxxx</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li>
<li>在博客中间手动添加<code>&lt;!-- more --&gt;</code>以截断，<strong>推荐该方法</strong></li>
</ul>
</li>
</ul>
<h2 id="增加评论系统"><a href="#增加评论系统" class="headerlink" title="增加评论系统"></a>增加评论系统</h2><h3 id="选择评论系统"><a href="#选择评论系统" class="headerlink" title="选择评论系统"></a>选择评论系统</h3><p>next 支持的评论系统，详见next 主题文件夹下的_config.yml文件，我选择的是 valine</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Multiple Comment System Support</span><br><span class="line">comments:</span><br><span class="line">  # Available values: tabs | buttons</span><br><span class="line">  style: tabs</span><br><span class="line">  # Choose a comment system to be displayed by default.</span><br><span class="line">  # Available values: changyan | disqus | disqusjs | gitalk | livere | valine</span><br><span class="line">  active: valine</span><br><span class="line">  # Setting `true` means remembering the comment system selected by the visitor.</span><br><span class="line">  storage: true</span><br><span class="line">  # Lazyload all comment systems.</span><br><span class="line">  lazyload: false</span><br><span class="line">  # Modify texts or order for any navs, here are some examples.</span><br><span class="line">  nav:</span><br><span class="line">    #disqus:</span><br><span class="line">    #  text: Load Disqus</span><br><span class="line">    #  order: -1</span><br><span class="line">    #gitalk:</span><br><span class="line">    #  order: -2</span><br></pre></td></tr></table></figure>
<h3 id="配置-valine"><a href="#配置-valine" class="headerlink" title="配置 valine"></a>配置 <a href="https://valine.js.org/">valine</a></h3><p>Valine 诞生于2017年8月7日，是一款基于LeanCloud的快速、简洁且高效的无后端评论系统。</p>
<ul>
<li>注册 <a href="https://www.leancloud.cn/">LeanCloud</a> 账号，直接点击主页右侧控制台注册账号</li>
<li>进入控制台后点击左下角<a href="https://console.leancloud.cn/apps">创建应用</a>，选择免费的「开发版」，也可以了解下「计价方案」</li>
<li>创建完应用，点击应用卡片中的设置图标，在左侧菜单栏中点击「应用凭证」，可以看到自己的 AppID，Appkey</li>
<li>选择安全中心，可以选择自己的「服务开关」，然后在 Web 安全域名中添加自己博客的域名「<a href="https://monkeylzl.github.io/%E3%80%8D">https://monkeylzl.github.io/」</a></li>
<li>修改 next 主题文件夹下的_config.yml文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Valine</span><br><span class="line"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span><br><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid: xx # Your leancloud application appid</span><br><span class="line">  appkey: xx # Your leancloud application appkey</span><br><span class="line">  notify: false # Mail notifier</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder: 有什么问题，欢迎留言指正与交流... # Comment box placeholder</span><br><span class="line">  avatar: mm # Gravatar style</span><br><span class="line">  guest_info: nick,mail,link # Custom comment header</span><br><span class="line">  pageSize: 10 # Pagination size</span><br><span class="line">  language: zh-CN # Language, available values: en, zh-cn</span><br><span class="line">  visitor: false # Article reading statistic</span><br><span class="line">  comment_count: true # If false, comment count will only be displayed in post page, not in home page</span><br><span class="line">  recordIP: false # Whether to record the commenter IP</span><br><span class="line">  serverURLs: # When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span><br><span class="line">  #post_meta_order: 0</span><br></pre></td></tr></table></figure></li>
<li>查看评论数据，通过点击自己创建的卡片应用的第一个图标「数据存储」中的 Comment 查看</li>
</ul>
<h2 id="目录设置"><a href="#目录设置" class="headerlink" title="目录设置"></a>目录设置</h2><ul>
<li>修改 next 主题文件夹下的_config.yml文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Table of Contents in the Sidebar</span><br><span class="line"># Front-matter variable (unsupport wrap expand_all).</span><br><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: true</span><br><span class="line">  # If true, all words will placed on next lines if header width longer then sidebar width.</span><br><span class="line">  wrap: false</span><br><span class="line">  # If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span><br><span class="line">  expand_all: true</span><br><span class="line">  # Maximum heading depth of generated toc.</span><br><span class="line">  max_depth: 6</span><br></pre></td></tr></table></figure></li>
<li>next 7.8.0 版本 toc 中包含中文导致无法点击跳转问题<br>该问题官方已经FIX，详见<a href="https://github.com/theme-next/hexo-theme-next/pull/1540/files">官方修改</a></li>
</ul>
<p>修改 source/js/utils.js 文件，如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">registerSidebarTOC: function() &#123;</span><br><span class="line">    const navItems = document.querySelectorAll(&#x27;.post-toc li&#x27;);</span><br><span class="line">    const sections = [...navItems].map(element =&gt; &#123;</span><br><span class="line">      var link = element.querySelector(&#x27;a.nav-link&#x27;);</span><br><span class="line">      var target = document.getElementById(decodeURI(link.getAttribute(&#x27;href&#x27;)).replace(&#x27;#&#x27;, &#x27;&#x27;));</span><br><span class="line">      // TOC item animation navigate.</span><br><span class="line">      link.addEventListener(&#x27;click&#x27;, event =&gt; &#123;</span><br><span class="line">        event.preventDefault();</span><br><span class="line">        //var target = document.getElementById(event.currentTarget.getAttribute(&#x27;href&#x27;).replace(&#x27;#&#x27;, &#x27;&#x27;));</span><br><span class="line">        var offset = target.getBoundingClientRect().top + window.scrollY;</span><br><span class="line">        window.anime(&#123;</span><br><span class="line">          targets  : document.scrollingElement,</span><br><span class="line">          duration : 500,</span><br><span class="line">          easing   : &#x27;linear&#x27;,</span><br><span class="line">          scrollTop: offset + 10</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">      //return document.getElementById(link.getAttribute(&#x27;href&#x27;).replace(&#x27;#&#x27;, &#x27;&#x27;));</span><br><span class="line">      return target;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>

<h2 id="代码风格设置"><a href="#代码风格设置" class="headerlink" title="代码风格设置"></a>代码风格设置</h2><p>修改 next 主题文件夹下的_config.yml文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  # Code Highlight theme</span><br><span class="line">  # Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span><br><span class="line">  # See: https://github.com/chriskempson/tomorrow-theme</span><br><span class="line">  #highlight_theme: normal</span><br><span class="line">  highlight_theme: night bright</span><br><span class="line">  # Add copy button on codeblock</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true</span><br><span class="line">    # Show text copy result.</span><br><span class="line">    show_result: true</span><br><span class="line">    # Available values: default | flat | mac</span><br><span class="line">    style: mac</span><br></pre></td></tr></table></figure>

<h2 id="切换暗黑模式"><a href="#切换暗黑模式" class="headerlink" title="切换暗黑模式"></a>切换暗黑模式</h2><ul>
<li>Next 7.x 使用 hexo-next-darkmode 插件自动添加可切换的暗黑模式，<a href="https://github.com/rqh656418510/hexo-next-darkmode">教程</a></li>
<li>安装<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-next-darkmode --save</span><br></pre></td></tr></table></figure></li>
<li>配置<br>修改 next 主题文件夹下的_config.yml文件，必须确保 NexT 原生的 darkmode 选项设置为 false，isActivated: true：默认激活暗黑/夜间模式，请始终与 saveInCookies: false、autoMatchOsTheme: false 一起使用<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># close NexT&#x27;s darkmode</span><br><span class="line">darkmode: false</span><br><span class="line"></span><br><span class="line"># Darkmode JS</span><br><span class="line"># For more information: https://github.com/rqh656418510/hexo-next-darkmode, https://github.com/sandoche/Darkmode.js</span><br><span class="line">darkmode_js:</span><br><span class="line">  enable: true</span><br><span class="line">  bottom: &#x27;64px&#x27; # default: &#x27;32px&#x27;</span><br><span class="line">  right: &#x27;unset&#x27; # default: &#x27;32px&#x27;</span><br><span class="line">  left: &#x27;32px&#x27; # default: &#x27;unset&#x27;</span><br><span class="line">  time: &#x27;0.5s&#x27; # default: &#x27;0.3s&#x27;</span><br><span class="line">  mixColor: &#x27;transparent&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  backgroundColor: &#x27;transparent&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  buttonColorDark: &#x27;#100f2c&#x27; # default: &#x27;#100f2c&#x27;</span><br><span class="line">  buttonColorLight: &#x27;#fff&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  isActivated: false # default false</span><br><span class="line">  saveInCookies: true # default: true</span><br><span class="line">  label: &#x27;🌓&#x27; # default: &#x27;&#x27;</span><br><span class="line">  autoMatchOsTheme: true # default: true</span><br><span class="line">  libUrl: # Set custom library cdn url for Darkmode.js</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="增加版权信息"><a href="#增加版权信息" class="headerlink" title="增加版权信息"></a>增加版权信息</h2><p>修改 next 主题文件夹下的_config.yml文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Creative Commons 4.0 International License.</span><br><span class="line"># See: https://creativecommons.org/share-your-work/licensing-types-examples</span><br><span class="line"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span><br><span class="line"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span><br><span class="line"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span><br><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: true</span><br><span class="line">  post: true</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure>

<h2 id="增加文章结束语"><a href="#增加文章结束语" class="headerlink" title="增加文章结束语"></a>增加文章结束语</h2><ul>
<li>修改修改 next 主题文件夹下的layout/_macro/post.swig 文件，在文章结束<code> END POST BODY</code> 位置增加<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;</span><br><span class="line">            ------------- 本文结束 &lt;i class=&quot;fa fa-heart-o&quot;&gt;&lt;/i&gt; 感谢您的阅读-------------</span><br><span class="line">    	&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="订阅微信公众号"><a href="#订阅微信公众号" class="headerlink" title="订阅微信公众号"></a>订阅微信公众号</h2><p>修改 next 主题文件夹下的_config.yml文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Subscribe through Telegram Channel, Twitter, etc.</span><br><span class="line"># Usage: `Key: permalink || icon` (Font Awesome)</span><br><span class="line">follow_me:</span><br><span class="line">  #Twitter: https://twitter.com/username || twitter</span><br><span class="line">  #Telegram: https://t.me/channel_name || telegram</span><br><span class="line">  WeChat: /images/wechat_channel.jpg || wechat</span><br><span class="line">  #RSS: /atom.xml || rss</span><br></pre></td></tr></table></figure>

<h2 id="右上角增加GitHub"><a href="#右上角增加GitHub" class="headerlink" title="右上角增加GitHub"></a>右上角增加GitHub</h2><p>修改 next 主题文件夹下的_config.yml文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># `Follow me on GitHub` banner in the top-right corner.</span><br><span class="line">github_banner:</span><br><span class="line">  enable: true</span><br><span class="line">  permalink: https://github.com/monkeylzl</span><br><span class="line">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure>

<h2 id="返回顶部功能"><a href="#返回顶部功能" class="headerlink" title="返回顶部功能"></a>返回顶部功能</h2><p>修改 next 主题文件夹下的_config.yml文件，默认显示了阅读进度</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true</span><br><span class="line">  # Back to top in sidebar.</span><br><span class="line">  sidebar: false</span><br><span class="line">  # Scroll percent label in b2t button.</span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure>

<h2 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h2><p>修改 next 主题文件夹下的_config.yml文件，默认显示了阅读进度</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  url: images/avatar.png #/images/avatar.gif</span><br><span class="line">  # If true, the avatar will be dispalyed in circle.</span><br><span class="line">  rounded: true</span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line">  rotated: true</span><br></pre></td></tr></table></figure>

<h2 id="字数统计和阅读时长"><a href="#字数统计和阅读时长" class="headerlink" title="字数统计和阅读时长"></a>字数统计和阅读时长</h2><ul>
<li>安装插件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure></li>
<li>修改 next 主题文件夹下的_config.yml文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true  #分隔线</span><br><span class="line">  item_text_post: true  #文章中的显示是否显示文本</span><br><span class="line">  item_text_total: true       #网页底部的显示是否显示文本</span><br><span class="line">  awl: 2 #平均每个字符的长度</span><br><span class="line">  wpm: 275 # 设定每分钟可阅读的字符数</span><br><span class="line">  symbols: true #是否统计字数</span><br><span class="line">  time: true #是否统计阅读时长</span><br><span class="line">  total_symbols: true #是否统计总字数</span><br><span class="line">  total_time: true #是否统计总阅读时长</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="添加音乐"><a href="#添加音乐" class="headerlink" title="添加音乐"></a>添加音乐</h2><ul>
<li>登陆网页版网易云音乐，然后找到自己喜欢的歌，点击歌曲下面的「生成外链播放器」</li>
<li>修改 next 主题下 layout/_macro/sidebar.swig 文件，在<code>&lt;div class=&quot;sidebar-inner&quot;&gt;</code>中添加<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div id=&quot;music&quot;&gt;</span><br><span class="line">    &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=280 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=28285910&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li>
<li>TODO APlayer 悬浮左下角音乐 Button 样式</li>
</ul>
<h2 id="社交链接"><a href="#社交链接" class="headerlink" title="社交链接"></a>社交链接</h2><p>修改 next 主题文件夹下的_config.yml文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Social Links</span><br><span class="line"># Usage: `Key: permalink || icon`</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/monkeylzl || github</span><br><span class="line">  #E-Mail: mailto:yourname@gmail.com || envelope</span><br><span class="line">  #Weibo: https://weibo.com/yourname || weibo</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br></pre></td></tr></table></figure>
<h2 id="添加阅读次数，访问量等"><a href="#添加阅读次数，访问量等" class="headerlink" title="添加阅读次数，访问量等"></a>添加阅读次数，访问量等</h2><p>修改 next 主题文件夹下的_config.yml文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Show Views / Visitors of the website / page with busuanzi.</span><br><span class="line"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: eye</span><br></pre></td></tr></table></figure>

<h2 id="RSS服务"><a href="#RSS服务" class="headerlink" title="RSS服务"></a>RSS服务</h2><ul>
<li><strong>在blog根目录</strong>，安装插件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></li>
<li>安装完之后执行<code>hexo g</code>,可以看到在 blog 根目录的pulic文件夹中出现一个 atom.xml 文件</li>
<li>修改 next 主题文件夹下的_config.yml文件，侧边栏显示 RSS<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Social Links</span><br><span class="line"># Usage: `Key: permalink || icon`</span><br><span class="line"># icon from https://fontawesome.dashgame.com/</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/monkeylzl || github</span><br><span class="line">  RSS: https://monkeylzl.github.io/atom.xml || rss</span><br></pre></td></tr></table></figure></li>
<li>修改 next 主题文件夹下的_config.yml文件，每篇文章底部显示<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Subscribe through Telegram Channel, Twitter, etc.</span><br><span class="line"># Usage: `Key: permalink || icon` (Font Awesome)</span><br><span class="line">follow_me:</span><br><span class="line">  #Twitter: https://twitter.com/username || twitter</span><br><span class="line">  #Telegram: https://t.me/channel_name || telegram</span><br><span class="line">  WeChat: /images/wechat_channel.jpg || wechat</span><br><span class="line">  RSS: /atom.xml || rss</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="页面底部添加站点运行时间"><a href="#页面底部添加站点运行时间" class="headerlink" title="页面底部添加站点运行时间"></a>页面底部添加站点运行时间</h2><ul>
<li>在 themes/next/layout/_partials/ 目录下创建 runtime.swig 源文件，并添加如下内容<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div id=&quot;site-runtime&quot;&gt;</span><br><span class="line">  &lt;span class=&quot;post-meta-item-icon&quot;&gt;</span><br><span class="line">    &lt;i class=&quot;fa fa-clock-o&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">  &lt;span id=&quot;runtime&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script language=&quot;javascript&quot;&gt;</span><br><span class="line">  function isPC() &#123;</span><br><span class="line">    var userAgentInfo = navigator.userAgent;</span><br><span class="line">    var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;];</span><br><span class="line">    for (var i = 0; i &lt; agents.length; i++) &#123;</span><br><span class="line">      if (userAgentInfo.indexOf(agents[i]) &gt; 0) &#123;</span><br><span class="line">        return false;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return true;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  function siteTime(openOnPC, start) &#123;</span><br><span class="line">    window.setTimeout(&quot;siteTime(openOnPC, start)&quot;, 1000);</span><br><span class="line">    var seconds = 1000;</span><br><span class="line">    var minutes = seconds * 60;</span><br><span class="line">    var hours = minutes * 60;</span><br><span class="line">    var days = hours * 24;</span><br><span class="line">    var years = days * 365;</span><br><span class="line"></span><br><span class="line">    &#123;%- if theme.runtime.start %&#125;</span><br><span class="line">      start = new Date(&quot;&#123;&#123; theme.runtime.start &#125;&#125;&quot;);</span><br><span class="line">    &#123;%- endif %&#125;</span><br><span class="line">    var now = new Date();</span><br><span class="line">    var year = now.getFullYear();</span><br><span class="line">    var month = now.getMonth() + 1;</span><br><span class="line">    var date = now.getDate();</span><br><span class="line">    var hour = now.getHours();</span><br><span class="line">    var minute = now.getMinutes();</span><br><span class="line">    var second = now.getSeconds();</span><br><span class="line">    var diff = now - start;</span><br><span class="line"></span><br><span class="line">    var diffYears = Math.floor(diff / years);</span><br><span class="line">    var diffDays = Math.floor((diff / days) - diffYears * 365);</span><br><span class="line">    var diffHours = Math.floor((diff - (diffYears * 365 + diffDays) * days) / hours);</span><br><span class="line">    var diffMinutes = Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours) / minutes);</span><br><span class="line">    var diffSeconds = Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours - diffMinutes * minutes) / seconds);</span><br><span class="line"></span><br><span class="line">    if (openOnPC) &#123;</span><br><span class="line">      document.getElementById(&quot;runtime&quot;).innerHTML = &quot;Running: &quot; + diffYears + &quot; years &quot; + diffDays + &quot; days &quot; + diffHours + &quot; hours &quot; + diffMinutes + &quot; mins &quot; + diffSeconds + &quot; secs&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      document.getElementById(&quot;runtime&quot;).innerHTML = &quot;Running: &quot; + diffYears + &quot;y &quot; + diffDays + &quot;d &quot; + diffHours + &quot;h &quot; + diffMinutes + &quot;m &quot; + diffSeconds + &quot;s&quot;;</span><br><span class="line">    &#125;˜</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  var showOnMobile = &#123;&#123; theme.runtime.mobile &#125;&#125;;</span><br><span class="line">  var openOnPC = isPC();</span><br><span class="line">  var start = new Date();</span><br><span class="line">  siteTime(openOnPC, start);</span><br><span class="line"></span><br><span class="line">  if (!openOnPC &amp;&amp; !showOnMobile) &#123;</span><br><span class="line">    document.getElementById(&#x27;site-runtime&#x27;).style.display = &#x27;none&#x27;;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li>编辑源文件 themes/next/layout/_partials/footer.swig，在文件末尾添加如下内容<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.runtime.enable %&#125;</span><br><span class="line">  &#123;% include &#x27;runtime.swig&#x27; %&#125;</span><br><span class="line">&#123;%- endif %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li>更改 Next 主题的配置文件 themes/next/_config.yml，添加以下内容<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Site Runtime</span><br><span class="line">runtime:</span><br><span class="line">  enable: true</span><br><span class="line">  # The time of the site started running. If not defined, current time of local time zone will be used.</span><br><span class="line">  # You can specify the time zone by adding the `+HOURS` or `-HOURS` format time zone.</span><br><span class="line">  # If not specify the time zone, it will use `+0000` as default.</span><br><span class="line">  # ex: &quot;2015-06-08 07:24:13 +0800&quot;, `+0800` specify that it is the time in the East Eight Time Zone.</span><br><span class="line">  start: 2019-11-23 09:00:00 +0800</span><br><span class="line">  # Whether to show on the mobile side</span><br><span class="line">  mobile: false</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ol>
<li>Hexo主题 : <a href="https://hexo.io/themes/">https://hexo.io/themes/</a></li>
<li>monkeylzl 效果博客 : <a href="https://monkeylzl.github.io/">https://monkeylzl.github.io/</a></li>
<li>Next 0.1.0-5.4.1版本 : <a href="https://theme-next.iissnan.com/getting-started.html">https://theme-next.iissnan.com/getting-started.html</a></li>
<li>NexT 6.0.0-8.8.0版本 : <a href="https://theme-next.js.org/">https://theme-next.js.org/</a></li>
<li>0.1.0-5.4.1版本 : <a href="https://github.com/iissnan/hexo-theme-next/tags">https://github.com/iissnan/hexo-theme-next/tags</a></li>
<li>6.0.0-7.8.0版本 : <a href="https://github.com/theme-next/hexo-theme-next/tags">https://github.com/theme-next/hexo-theme-next/tags</a></li>
<li>8.0.0-8.8.0版本 : <a href="https://github.com/next-theme/hexo-theme-next/tags">https://github.com/next-theme/hexo-theme-next/tags</a></li>
<li>valine : <a href="https://valine.js.org/">https://valine.js.org/</a></li>
<li>LeanCloud : <a href="https://www.leancloud.cn/">https://www.leancloud.cn/</a></li>
<li>hexo-next-darkmode : <a href="https://github.com/rqh656418510/hexo-next-darkmode">https://github.com/rqh656418510/hexo-next-darkmode</a></li>
<li>Hexo Next 主题详细配置之一 : <a href="https://www.techgrow.cn/posts/755ff30d.html">https://www.techgrow.cn/posts/755ff30d.html</a></li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Java之继承</title>
    <url>/2017/03/09/Java%E4%B9%8B%E7%BB%A7%E6%89%BF/</url>
    <content><![CDATA[<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>继承是类与类的一种关系，是一种“is a”的关系。<br>继承是从已有的类中派生出新的类，新的类能吸收已有类的数据属性和行为，并能扩展新能力。</p>
<span id="more"></span>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 子类 <span class="keyword">extends</span> 父类</span>&#123;&#125;</span><br></pre></td></tr></table></figure>
<h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ol>
<li>子类继承父类时，子类是不可以继承父类的构造函数，必须调用父类的构造函数<br>具有两种情况：<br>第一种：隐含super()形式，父类具有无参构造器或默认构造器</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;&#125; <span class="comment">//父类具有默认的构造器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(); <span class="comment">//可以省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class A&#123;</span><br><span class="line">  public A()&#123;</span><br><span class="line">    System.out.print(&quot;父类无参构造器&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">class B extends A&#123;  	 </span><br><span class="line">  public B()&#123;</span><br><span class="line">    super(); //可以省略</span><br><span class="line">    System.out.print(&quot;子类无参构造器&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> 结果显示：父类无参构造器<br>　　　　　子类无参构造器<br>第二种：显示super()形式，父类具有有参构造器，super(参数)；一定要放在构造方法的首行上。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class A&#123;</span><br><span class="line">    public A(String name)&#123;</span><br><span class="line">        System.out.print(&quot;父类有参构造器&quot;);</span><br><span class="line">  	&#125;</span><br><span class="line">&#125;</span><br><span class="line">class B extends A&#123;</span><br><span class="line">    public B()&#123;</span><br><span class="line">        super(&quot;lzl&quot;); //不可省略，()中的内容可任意，只要符合String类型，必须在首行</span><br><span class="line">        System.out.print(&quot;子类无参构造器&quot;);</span><br><span class="line">  	&#125;</span><br><span class="line"> &#125;</span><br><span class="line">public class Test&#123;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        B b = new B();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结果显示：父类有参构造器<br>　　　　　子类无参构造器<br>如果要实例化子类对象，会默认先调用父类构造，为父类之中的属性初始化，之后再调用子类构造，为子类之中的属性初始化，即：默认情况下，子类会找到父类之中的无参构造方法。<br>2. 继承只能是单继承，但存在多层继承</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class C extends A,B&#123;&#125;</span><br></pre></td></tr></table></figure>
<p>是错的，但是可以这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class B extends A&#123;&#125;</span><br><span class="line">class C extends B&#123;&#125;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>子类继承父类时，调用方法时优先选择子类中被重写的方法，若没有，就会调用父类中的方法<br>继承时，子类可以创建父类中没有的方法，也可以使用；<br>但使用过程中需要注意，在多态里子类创建了自己的方法后，通过向上转型进行动态绑定创建对象后，对象调用子类自己创建的方法会报错<br>Animal dog = new Dog();这句表现的是JAVA的多态，表示由一个父类的引用指向子类，因为是引用的是动物类型，而动物类没有getC()方法，所以编译器会认为，这个方法是不存在的。如果要通过编译必须这样写：Dog dog = new Dog();这就没有体现java中的多态，没有父类引用指向子类对象，只是继承。<br>好比是：我说要一个动物，你给我一只小狗，这是可以的，但是狗会啃骨头，并不等于其他动物都会啃骨头。所以你给我一个动物，然后告诉我它要啃骨头，然而这只动物未必是小狗，所以我告诉你编译错误了。  </li>
<li>在一个子类继承的时候，实际上会继承父类之中的所有操作（属性、方法），但是需要注意的是，对于所有的非私有（no private）操作属于显式继承（可以直接利用对象操作），而所有的私有操作属于隐式继承（间接完成）。通过利用对象操作调用父类private属性如下所示：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class A &#123;</span><br><span class="line">    private String str;</span><br><span class="line">    public void setStr(String str) &#123;</span><br><span class="line">        this.str = str;</span><br><span class="line">    &#125;</span><br><span class="line">    public String getStr() &#123;</span><br><span class="line">        return this.str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class B extends A &#123;</span><br><span class="line">    public void print() &#123;</span><br><span class="line">        //System.out.println(str); // 错误: str定义为private，不可见</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class TestDemo &#123;</span><br><span class="line">    public static void main(String args[]) &#123;</span><br><span class="line">        B b = new B();</span><br><span class="line">        b.setStr(&quot;hello&quot;);</span><br><span class="line">        System.out.println(b.getStr());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3>实现了代码的复用，减少代码冗余<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Animal&#123;</span><br><span class="line">    private String name;</span><br><span class="line">    public void setName(String name)&#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    public String getName(String name)&#123;</span><br><span class="line">        return this.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Dog&#123;</span><br><span class="line">    private String name;</span><br><span class="line">    private int age;</span><br><span class="line">    public void setName(String name)&#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    public String getName(String name)&#123;</span><br><span class="line">        return this.name;</span><br><span class="line">    &#125;</span><br><span class="line">    public void setAge(int age)&#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    public int getAge(int age)&#123;</span><br><span class="line">        return this.age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
若没有继承，这种代码的重复是不可避免的。</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>百度地图面试</title>
    <url>/2017/05/16/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E9%9D%A2%E8%AF%95/</url>
    <content><![CDATA[<p>这次「百度地图的 Android 开发」面试问的非常基础，基本是涵盖了所有的Java的基础和Android的基础，数据结构和算法没有涉及到，非常的详细，很小的知识点都会覆盖，和自己最初准备的还是有些差距同时也让我认识到了基础的重要性吧，还是有些漏洞的。</p>
<span id="more"></span>

<p>面试的主要问题：</p>
<ol>
<li>注释有哪些？</li>
<li>各种访问修饰符，哪些可以修饰类，哪些可以修饰方法，那些可以修饰变量，以及修饰的范围是什么？</li>
<li>try-catch 的用法，里面可以使用 return 语句吗？</li>
<li>异常有哪些？</li>
<li>线程的状态有哪些？</li>
<li>抽象类与接口的区别？</li>
<li>Java 中序列化，序列化的作用？</li>
<li>Android 的四大组件？</li>
<li>activity 的周期和启动模式</li>
<li>activity 中如果出现弹窗的活动周期？</li>
<li>Broadcast 有哪些类型？ Android 5.0, 6.0，7.0 中对Broadcast做了哪些修改？</li>
<li>Server 的周期与启动？</li>
<li>Android 的优化做过没有？</li>
<li>内存的泄露？</li>
<li>http 和 https 有什么区别？</li>
<li>设计模式有哪些？</li>
<li>ListView 的优化，ViewHolder 的使用？</li>
<li>bitmap 的缩略图？我只是抓住采样的计算，当时是不是考官想要知道 bitmap 的加载和缓存机制呢？</li>
<li>用过的 IDE 有哪些？ Gradle 的用法？</li>
<li>有没有什么 C 语言的编写能力？</li>
<li>为什么学的是通信，现在选择的是 Android？</li>
<li>爱好是什么？</li>
<li>介绍实验室的通信的项目？</li>
</ol>
<p>总结：</p>
<p>①全程感觉发挥的并不是很好，现在想想很多地方还可以在完善一些，可能跟自己准备的出入很大，以及一开始的基础知识回答的并不是很好影响了自己，暴露自己的问题就是基础的知识的不扎实。</p>
<p>②当考官透漏出一些信息时，虽然不是很明显，但你要能够抓住这个东西，比如这次的实习的时间上问题。认识到问题的关键就应该快速的给出自己的合理的想法，而不要让已有的想法框住自己，既然自己很想抓住这次机会，那就要能够用语言表达出来，而不是仅仅停留在想的基础上。</p>
<p>③突然意识到了自己的一个更大的问题，想与表达出来，平时大部分都是和自己待在一起，自己在思考，在纸上练习，很少将自己想的东西表达出来，导致面试的时候可能想到了，但是考官没有问到，也就没有说出来。</p>
<p>④还有一点就是参加面试的前一天最好不在看新的的知识，而是踏踏实实的把自己看过的知识好好的巩固一下。因为看新的知识，可能很幸运恰好被问到，但是由于刚刚看过们很可能由于轻微的紧张根本想不到，就像这次的  bitmap 当时就没有想到加载和缓存这块，所以功夫要下在平时，抛弃一些安全感，并将面试看成一次自我的检验，过后总结补充。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>面试记录</tag>
      </tags>
  </entry>
  <entry>
    <title>美团面试</title>
    <url>/2017/05/06/%E7%BE%8E%E5%9B%A2%E9%9D%A2%E8%AF%95/</url>
    <content><![CDATA[<p>今天参加了美团的暑期实习的 Android 的开发岗，在此进行一下总结：</p>
<span id="more"></span>

<ol>
<li>简历，一定要体现真诚，不会的不知道的一定不要写，因为面试的一面基本上就是按照简历来问。</li>
<li>面试的过程中，最大限度的表达出自己所知道的东西，即使是对考官所提问题不是很了解，但稍微相关的可以自己提出来，引导主考官向自己熟悉的地方继续问，有效地沟通。</li>
<li>面试的全程不要担心自己不会，不会就直接说不是很了解，但此时一定要体现出自己好学，突出自己学习能力。</li>
<li>学会适当的包装自己的项目，也就是简历上写的高大上一些，尤其是通信项目，对方不是很懂，但当他问时，需要能够通俗的用类比的方法进行讲解。对于相关的项目，考官比你知道的要多，就不要过分的把自己不知道的也写上，尽量把项目所用的知识点能够清晰的罗列出来，细节的展现。</li>
<li>算法是基本功，有些知识可能是知道，但题目可能是不一样的，如何将这个知识点应用到所出的题中，需要通过刷题来进行巩固，其次不要忽略时间复杂度，空间复杂度的计算，面试官一般都会问你的这个算法的时间复杂度和空间复杂度是多少，可能还会问怎么进行优化。</li>
<li>面试过程是将自己知道的知识点讲解出来，在讲的的过程很可能你会发现当自己对于一个知识点不是很理解时，是很难讲清楚的，所以要学会讲出来或者写出来。</li>
<li>具体的问题有：Android四大组件，HTTP、TCP/IP，垃圾回收GC，归并算法变型</li>
</ol>
<p>一些常见的问题：</p>
<p>1.你的缺点是什么？</p>
<p>这个是考察自己的自己的认知，只要体现自己的真实想法就可以，从最近自己的感悟出发，如自己的注意力或者专注度不够高，并举自己例子进行说明，如现在是信息爆炸的时代，但真正对自己有用的并不是很多，一些明星八卦等吸引了我们太多的注意力，但这对于我们自身的成长并没有起到实质的促进作用，并由此引出自己的缺点是对自己的注意力的把控与管理不是很好，正在努力的改善提高自己掌控自己的注意力，以集中更多的精力投入到自我的成长中。</p>
<p>2.你的爱好是什么？</p>
<p>两个方面考虑：</p>
<p>一是与求职的职位相关的爱好：</p>
<p>比如写博客分享自己对某个知识点的理解，详解其中自己写博客的感悟：</p>
<p>①可以巩固自己对这个知识点的把握，只有自己真正写出来其中细节、逻辑关系、这个知识点的全面性等才能充分的体现出来；</p>
<p>②可以见证自己的成长，增强自己的信心，充实自己；</p>
<p>③可以分享自己的观点，如果能够帮助遇到相同的问题的人，这个对自己来说应该说是一种鼓励，有一种巨大的成就感。</p>
<p>二是与求职职位无关的爱好;</p>
<p>比如自己特别喜欢运动，打篮球、跑步、健身、骑行等，这里的每一个点尽量都可以例举很多自己真正的自我体验，最好能有自己的真实感悟，比如喜好健身，首先有一个目标，我要锻炼那块肌肉，然后针对这个目标我做了哪些有效的动作，影响效果的关键是在做动作的过程中自己的注意力是否充分的集中到那块要发力的肌肉，最后要做到的就是持之以恒坚持下去，并通过这个爱好讲述从中获得很大的感悟，体验到其实完成一项任务的过程与之类似。</p>
<p>3.你还有什么问题？</p>
<p>两个方面考虑：</p>
<p>一是与技术无关的问题：</p>
<p>①针对于应聘职位，在您看来，贵公司对于一个应届实习生有哪些要求，对于技能的掌握应该达到一个怎样的程度？</p>
<p>可以知道面试官这次面试主要考察的是哪几方面，同时自己可以对应的查看自己的这几方面，那个表现的不是足够好，可以直接说出自己对这次面试的感觉，哪些做的不够好，关键是突出自己下来会继续学习，并希望能够尽快达到面试官的要求！</p>
<p>②如果我能够有幸加入您的团队，我会做那些具体的工作？</p>
<p>看是否自己真正喜欢，是否对于自己成长有很大帮助，毕竟是一个双向选择的机会。</p>
<p>③您面试过这么多人，对于一些优秀的面试者他们都具有那些特点？</p>
<p>这其实一方面体现自己向着优秀前进，一方面可以看出面试官自己心中对于面试者的形象，而且这应该是发自于面试官内心的想法。</p>
<p>比如这次面试官说，「对技术的热爱」，这就可以充分体现出面试官自己就是一个极爱技术的人，其实这里自己可以直接顺便带一句，「虽然这次面试表现自己对技术掌握的并不是很好，但我也是一个热爱技术的人，下来自己会继续努力，掌握更多技术，提高自己的能力。」</p>
<p>④通过这次面试，我感觉自己的哪几方面比较薄弱，自己先进行归纳，然后问考官，以您多年的经验来看，我还有哪些具体的方面需要接下来好好努力的？下来会继续努力。毕竟经过一次面试，最主要的是要获得经验，并弥补自己的不足。</p>
<p>二是与技术相关的问题：</p>
<p>⑤准备一个简单的中级的技术问题，有风险，因为一旦所问的问题考官不知道这就尴尬了，所以请谨慎。由于这方面提问前提是你对于一个技术有较高层次的认识，才能提出有一定水平的问题，从而体现出自己对于技术的钻研和热爱。</p>
<p>4.你为什么喜欢 Android ？</p>
<p>这个问题，我之前有考虑过，主要是通过对比突出我的想法，在实验室做的都是一些关于无线通信方面的项目，着这个过程中有哪些弊端，而 学习 Android 可以得到不同的体验！</p>
<p>比如有很多文献是鱼龙混杂的，有时甚至根本不能找到一个问题的很好的解决办法，相应的在学 Android 的过程中，当自己遇到一个问题，不管是通过博客，还是 GitHub,这个问题基本上都会有较好的解决，实在不行还可以直接找源码看，这个是最根本的方法，而科研是没有源码这个东西的。</p>
<p>其次无线通信的理论研究，大部分是通过仿真来进行验证的，并不像 Android 可以做出最终的成品并进行体验，不断地完善它直到自己满意为止，这个是一种巨大的成就感和自我的鼓励！</p>
<p>5.当你遇到一个问题是如何解决的？</p>
<p>第一个层次：工欲善其事必先利其器，初期我解决问题的几大法宝：Google，GitHub，博客，StackOverFlow 以及一些官方说明文档，当然一切问题最终都可以通过阅读远吗进行解决，目前自己也在不断地尝试阅读源码解决问题，不过自己还处于初级阶段，阅读的源码并不是很多。</p>
<p>第二个层次：和别人探讨，在自己经过努力查找之后，可能依然没有弄明白，这时我会找最方便的对这方面有所了解的人，直接进行探讨。</p>
<p>第三个层次：这个也是我是一直渴望的，希望能有一个经验上技术上的大牛，进行指点，比如向您一样的人，因为他们对于技术的理解要远高于我，可能他们的一句话，就能让我恍然大悟。当然，这些大牛也很忙，这就需要我前面的几个层次的准备，这个问题经过努力仍未解决。我认为我也希望能够帮助这些大牛做些力所能及的事，因为我感觉一味的索取总是让人感觉不舒服，所以对于帮助过我的人，我也会尽自己所能去帮助他。所以希望能够多接触这些大牛，崇拜之余不断的提升自我。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>面试记录</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 外接机械键盘设置</title>
    <url>/2021/12/12/mac%E5%A4%96%E6%8E%A5%E9%94%AE%E7%9B%98%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p>一般的机械键盘和 Mac 上的键盘都有些细微的差别，主要体现在 command, Fn 两个键上</p>
<span id="more"></span>

<p>自己买了 Filco 机械键盘之后，也是搜索了对应的解法，其中一种最简单的方法就是使用 karabiner 软件，<a href="https://karabiner-elements.pqrs.org/index.html">karabiner</a>是一个简单的修改机械键盘和 Mac 键映射的小工具。使用步骤：</p>
<ul>
<li><p>下载安装 karabiner ： <a href="https://karabiner-elements.pqrs.org/">https://karabiner-elements.pqrs.org/</a></p>
</li>
<li><p>选择 Tab 中 Simple Modificatiaons,然后 Target Device 选择 Usb Keyboard</p>
</li>
<li><p>按照自己的习惯进行修改，这里我修改了键帽的位置，将空格左右两侧的 Alt 和 Win 键帽换掉，然后添加如下映射，解决command 和 Fn 键的映射关系，具体配置如下图：</p>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/monkeylzl/monkeylzl.github.io/master/picRep/mac%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E8%AE%BE%E7%BD%AE.png" alt="mac机械键盘设置"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>《设计中的设计》笔记</title>
    <url>/2022/03/23/%E3%80%8A%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1%E3%80%8B%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>读完设计中的设计一书，对于设计有了进一步的认识，但是让我一下回答出什么是设计，可能还是比较困难的，但形成了一些基本的认知。</p>
<span id="more"></span>

<h1 id="什么是设计"><a href="#什么是设计" class="headerlink" title="什么是设计"></a>什么是设计</h1><ul>
<li>设计倾注着作者的想法、意识或者灵魂。带有个人意识的行动，我理解其实都可以称之为设计，但是一说到设计，我们更多的可能会想到的是建筑设计、平面设计等，但很少有人说写作是一种设计</li>
<li>设计的几个要素<ul>
<li>实用性：解决生活中的问题，让生活更加便捷</li>
<li>美观性：设计一定要包含美，让人看着舒服，比如运用一些基本的美学技巧，黄金比例之类的</li>
<li>艺术性：应该包含不同的层次，不同的角度，比如包含一些人文情怀，让人们的内心受到触动；有些完全就是一件艺术品，有些人能够理解，有些人可能根本就无法理解</li>
</ul>
</li>
<li>设计是一种高级的信息表达</li>
</ul>
<h1 id="什么是好的设计"><a href="#什么是好的设计" class="headerlink" title="什么是好的设计"></a>什么是好的设计</h1><ul>
<li>解决生活中的问题，兼具基本的美观</li>
<li>具有独创性，能够触动使用者的内心，引起共鸣，甚至是反思，充满着一种人文气息，比如文中提到出入境章、四角方形卫生纸、妇产医院标识系统、松屋银座、无印良品和天空森林旅馆等设计案例</li>
<li>能够产生引导作用，比如苹果产品，提升了大众的审美，引领着移动终端的设计规范</li>
</ul>
<h1 id="惊叹点"><a href="#惊叹点" class="headerlink" title="惊叹点"></a>惊叹点</h1><ul>
<li><p>作者在文中对于妇产医院标识系统、松屋银座、无印良品等设计理念的剖析，讲述为什么这样设计，其中的设计理念很有意思，让人感觉到原来这个还可以这样做</p>
</li>
<li><p>作者对于穿插其中若隐若现的设计历史讲解，手法很高级，就像网络爽文（比如：《斗破苍穹》）中的感情线一般</p>
</li>
<li><p>作者在文中传达的高级理念</p>
<ul>
<li>设计来源于生活</li>
<li>在当今快节奏，漫天信息的环境中，设计应该保持清醒，设计师也应该有自己的坚持，给人带来引导</li>
<li>设计不仅仅体现在视觉上，是一种“五感”，包括触觉，味觉，嗅觉，听觉，视觉等，给人一种立体感</li>
<li>设计中的信息之美：清晰，独创，幽默</li>
</ul>
</li>
<li><p>作者的文学功底，语言表达能力非常强，摘抄文中描写亚叙苑旅馆中的一段，大家可以感受一下</p>
<blockquote>
<p>位于鹿儿岛机场附近的旅馆亚叙苑与其他的温泉旅馆明显不同。在那里，茅草屋比肩而立，公鸡神气地走来走去，完全没有“拘泥”之感。在这里，你似乎能感觉到事物的本质。空气新鲜，茅草屋前不远的篱笆上晒着魔芋。阶梯状的石头水槽里，水静静地流着，里面浸着蔬菜。去往露天澡堂的路上，有一个亭子，里面有暖炉，应着时节还会在暖炉旁边插几支竹筒，筒内盛着的是温水稀释了的烧酒，客人可以随意饮用。吃饭时用的是当天切下来的青竹筷子，虽然不是什么高级材料，其中却蕴含着自然绵延不绝的力量。</p>
</blockquote>
</li>
</ul>
<p>这是一本小而美的书，书中充满着温暖和新奇，读起来的感觉就像下过雨的清晨，斜挎着竹篮去采蘑菇的小姑娘发现了一堆隐藏在湿润蓬松的土壤下的一堆小蘑菇一样。</p>
<p>读完这本书作者给我的感觉应该是一位温文尔雅的人，给人一种如沐浴春风般的感觉，充满着年迈老人的那种睿智，但同时兼具年轻人意气执着，但缺少了一丝丝老夫聊发少年狂豪迈。</p>
<p>另附文中图片：</p>
<p>无印良品-地平线</p>
<p>松屋银座</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>格局</tag>
      </tags>
  </entry>
</search>
